openapi: 3.0.0
paths:
  /auth/sign-in-one-c:
    post:
      operationId: AuthController_signInOneC
      summary: Авторизация при помощи 1C
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInRequestDto'
      responses:
        '200':
          description: ''
      tags:
        - auth
  /auth/sign-out:
    post:
      operationId: AuthController_signOut
      summary: Выход из сессии
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - auth
  /auth/session-info:
    get:
      operationId: AuthController_getSessionInfo
      summary: Получение информации о сессии
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionInfoDto'
      tags:
        - auth
  /users/avatar-by-user-id:
    get:
      operationId: UsersController_getAvatarByUserId
      summary: Получение фотографии пользователя
      parameters:
        - name: userId
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvatarDto'
      tags:
        - users
  /users/work-time:
    get:
      operationId: UsersController_getUserWorkTime
      summary: Получение информации о рабочем времени
      parameters:
        - name: userId
          required: true
          in: query
          schema:
            type: string
        - name: startDate
          required: true
          in: query
          schema:
            type: string
        - name: endDate
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkTimesInfo'
      tags:
        - users
  /panel/bad-applications:
    get:
      operationId: PanelController_getBadApplications
      summary: Получение информации о отказах, возвратах, и пропущенных звонках
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BadApplication'
      tags:
        - panel
  /panel/categories:
    get:
      operationId: PanelController_getCategories
      summary: Получение категорий
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
      tags:
        - panel
  /panel/applications-sales:
    get:
      operationId: PanelController_getApplicationSale
      summary: Получение заявок и продаж
      parameters:
        - name: title
          required: true
          in: query
          schema:
            type: string
        - name: type
          required: true
          in: query
          schema:
            type: string
        - name: page
          required: true
          in: query
          schema:
            type: string
        - name: count
          required: true
          in: query
          schema:
            type: string
        - name: text
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSaleDto'
      tags:
        - panel
  /panel/move-application-sale:
    post:
      operationId: PanelController_moveApplicationSale
      summary: Перемещение заявок и продаж
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveApplicationSaleDto'
      responses:
        '200':
          description: ''
      tags:
        - panel
  /panel/organizations-bills:
    get:
      operationId: PanelController_getOrgsBills
      summary: Получение организация и счетов
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgsBills'
      tags:
        - panel
  /panel/cancels:
    get:
      operationId: PanelController_getCancels
      summary: Отказы
      parameters:
        - name: page
          required: true
          in: query
          schema:
            type: string
        - name: count
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSaleDto'
      tags:
        - panel
  /panel/returns:
    get:
      operationId: PanelController_getReturns
      summary: Возвраты
      parameters:
        - name: page
          required: true
          in: query
          schema:
            type: string
        - name: count
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgsBills'
      tags:
        - panel
  /panel/missed-calls:
    get:
      operationId: PanelController_getMissedCalls
      summary: Пропущенные звонки
      parameters:
        - name: page
          required: true
          in: query
          schema:
            type: string
        - name: count
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgsBills'
      tags:
        - panel
  /panel/refusal:
    post:
      operationId: PanelController_refusalApplication
      summary: Передать заявку в отказ
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReqRefusalDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgsBills'
      tags:
        - panel
  /panel/delivery-info:
    get:
      operationId: PanelController_deliveryInfo
      summary: Получить информацию о доставке
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryInfoRes'
      tags:
        - panel
  /panel/get-check:
    get:
      operationId: PanelController_getCheck
      summary: Получить информацию о счёте
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResCheck'
      tags:
        - panel
  /panel/create-check:
    post:
      operationId: PanelController_createCheck
      summary: Сформировать счёт
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReqCreateCheck'
      responses:
        '200':
          description: ''
      tags:
        - panel
  /products:
    get:
      operationId: ProductsController_getProducts
      summary: Получение товаров по запросу
      parameters:
        - name: q
          required: false
          in: query
          schema:
            type: string
        - name: addPart
          required: false
          in: query
          schema:
            type: string
        - name: page
          required: true
          in: query
          schema:
            type: string
        - name: count
          required: true
          in: query
          schema:
            type: string
        - name: pk
          required: false
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsResponse'
      tags:
        - products
  /products/one-product/{id}:
    get:
      operationId: ProductsController_getProduct
      summary: Получение товара
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDto'
      tags:
        - products
  /products/type-products:
    get:
      operationId: ProductsController_getTypesProduct
      summary: Получение типов продуктов
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductsTypesResponse'
      tags:
        - products
  /products/similar-products:
    get:
      operationId: ProductsController_getSimilarProducts
      summary: Получение похожих товаров
      parameters:
        - name: q
          required: false
          in: query
          schema:
            type: string
        - name: addPart
          required: false
          in: query
          schema:
            type: string
        - name: page
          required: true
          in: query
          schema:
            type: string
        - name: count
          required: true
          in: query
          schema:
            type: string
        - name: pk
          required: false
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsResponse'
      tags:
        - products
  /products/issue-product-in-sale:
    post:
      operationId: ProductsController_issueProduct
      summary: Выдача товара в продаже
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueProductInSaleReq'
      responses:
        '200':
          description: ''
      tags:
        - products
  /products/change-product-in-app-sale:
    post:
      operationId: ProductsController_changeProductInAppSale
      summary: Изменение товара в заявке или продаже
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeProductInAppSale'
      responses:
        '200':
          description: ''
      tags:
        - products
  /products/move-product:
    post:
      operationId: ProductsController_moveProduct
      summary: Изменение места товара
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReqMoveProduct'
      responses:
        '200':
          description: ''
      tags:
        - products
  /products/move-pallete:
    post:
      operationId: ProductsController_movePallete
      summary: Изменение места паллета
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReqMovePallete'
      responses:
        '200':
          description: ''
      tags:
        - products
  /products/assign-main-photo:
    put:
      operationId: ProductsController_assignMainPhoto
      summary: Назначить фотографию главной
      parameters:
        - name: productId
          required: true
          in: query
          schema:
            type: string
        - name: type
          required: true
          in: query
          schema:
            type: string
        - name: imageUrl
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - products
  /products/edit:
    post:
      operationId: ProductsController_editProduct
      summary: Изменение цены и комментарийя продукта
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReqEditProduct'
      responses:
        '200':
          description: ''
      tags:
        - products
  /products/lost-products:
    get:
      operationId: ProductsController_getLostProducts
      summary: Получение потерянных продуктов
      parameters:
        - name: page
          required: true
          in: query
          schema:
            type: string
        - name: count
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsResponse'
      tags:
        - products
  /products/remove-to-lost:
    post:
      operationId: ProductsController_removeToLost
      summary: Перемещение массива товаров в список потерянных
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReqSendToLost'
      responses:
        '200':
          description: ''
      tags:
        - products
  /products/add-product-to-zakaz-naryad:
    post:
      operationId: ProductsController_addProductToZakazNaryad
      summary: Добавить товар в заказ наряд
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReqAddToZakazNaryad'
      responses:
        '200':
          description: ''
      tags:
        - products
  /applications/{id}:
    get:
      operationId: ApplicationsController_getApplication
      summary: Получение заявки
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponseDto'
      tags:
        - applications
  /sales/{id}:
    get:
      operationId: SalesController_getSale
      summary: Получение продажи
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaleResponseDto'
      tags:
        - sales
  /sales/add-track-number:
    post:
      operationId: SalesController_addTrackNumber
      summary: Добавить трек номер к продаже
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaleAddTrackNumberReq'
      responses:
        '200':
          description: ''
      tags:
        - sales
  /sales/create-sale:
    post:
      operationId: SalesController_createSale
      summary: Создание продажи
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSaleDto'
      responses:
        '200':
          description: ''
      tags:
        - sales
  /images:
    post:
      operationId: ImagesController_uploadImages
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                productId:
                  type: string
                  format: string
                userId:
                  type: string
                  format: string
                username:
                  type: string
                  format: string
                files:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '201':
          description: ''
      tags:
        - images
    delete:
      operationId: ImagesController_deletImage
      parameters:
        - name: productId
          required: true
          in: query
          schema:
            type: string
        - name: image
          required: true
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: ''
      tags:
        - images
  /images/statistics-of-photos:
    get:
      operationId: ImagesController_getStatustucsOfPhotos
      summary: Получение списка всех транспортных компаний
      parameters:
        - name: year
          required: true
          in: query
          schema:
            type: number
        - name: month
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResStatisticsOfPhotos'
      tags:
        - images
  /locations/countries:
    get:
      operationId: LocationsController_getCountries
      summary: Получение списка стран
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResCountriesDto'
      tags:
        - locations
  /locations/region-by-country:
    get:
      operationId: LocationsController_getRegionsByCountry
      summary: Получение списка регионов для определённой страны
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResCountriesDto'
      tags:
        - locations
  /locations/cities-by-region:
    get:
      operationId: LocationsController_getCitiesByRegion
      summary: Получение списка городов для определённого региона
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResCountriesDto'
      tags:
        - locations
  /transport-company/all-transport-companies:
    get:
      operationId: TransportCompanyController_getTransportCompanies
      summary: Получение списка всех транспортных компаний
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResTransportCompanyDto'
      tags:
        - transport-company
  /cart/get-cart:
    get:
      operationId: CartController_getcart
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
        - name: page
          required: true
          in: query
          schema:
            type: string
        - name: count
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResCartDto'
      tags:
        - cart
  /poddons/one-poddon:
    get:
      operationId: PoddonsController_getOnePoddon
      summary: Информация о поддоне
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
        - name: page
          required: true
          in: query
          schema:
            type: string
        - name: count
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResPoddonDto'
      tags:
        - poddons
info:
  title: WT PANEL
  description: ''
  version: 1.0.0
  contact: {}
tags: []
servers: []
components:
  schemas:
    SignInRequestDto:
      type: object
      properties:
        phone:
          type: string
          example: '+79129656125'
        password:
          type: string
          example: Сергеев121
      required:
        - phone
        - password
    Role:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
      required:
        - id
        - title
    SessionInfoDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        company:
          type: string
        post:
          type: string
        birth_date:
          type: string
        personal_phone:
          type: string
        work_phone:
          type: string
        cart:
          type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
      required:
        - id
        - name
        - company
        - post
        - birth_date
        - personal_phone
        - work_phone
        - cart
        - roles
    AvatarDto:
      type: object
      properties:
        avatar:
          type: string
      required:
        - avatar
    WorkTime:
      type: object
      properties:
        day:
          type: string
        startTime:
          type: string
        endTime:
          type: string
      required:
        - day
    WorkTimesInfo:
      type: object
      properties:
        workDaysCount:
          type: number
        totalWorkHours:
          type: number
        workTimes:
          type: array
          items:
            $ref: '#/components/schemas/WorkTime'
        absencesCount:
          type: number
        lateArrivalsCount:
          type: number
        overtimesCount:
          type: number
      required:
        - workDaysCount
        - totalWorkHours
        - workTimes
        - absencesCount
        - lateArrivalsCount
        - overtimesCount
    BadApplication:
      type: object
      properties:
        count:
          type: string
        state:
          type: string
      required:
        - count
        - state
    Category:
      type: object
      properties:
        count:
          type: number
        title:
          type: string
        type:
          type: string
      required:
        - count
        - title
        - type
    InfoDto:
      type: object
      properties:
        pages:
          type: number
        count:
          type: number
      required:
        - pages
        - count
    ResponsibleDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        phone:
          type: string
      required:
        - id
        - name
        - phone
    PorterDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        phone:
          type: string
      required:
        - id
        - name
        - phone
    DataDto:
      type: object
      properties:
        id:
          type: string
        client:
          type: string
        responsible:
          $ref: '#/components/schemas/ResponsibleDto'
        processing:
          type: string
        sub_processing:
          type: string
        porter:
          $ref: '#/components/schemas/PorterDto'
        flag:
          type: number
        tk:
          type: string
      required:
        - id
        - client
        - responsible
        - processing
        - sub_processing
        - porter
        - flag
        - tk
    ApplicationSaleDto:
      type: object
      properties:
        info:
          $ref: '#/components/schemas/InfoDto'
        data:
          type: array
          items:
            $ref: '#/components/schemas/DataDto'
      required:
        - info
        - data
    MoveApplicationSaleDto:
      type: object
      properties:
        id:
          type: string
        processing:
          type: string
        sub_processing:
          type: string
        type:
          type: string
        move_myself:
          type: boolean
        comment_for_collector:
          type: string
      required:
        - id
        - processing
        - sub_processing
        - type
        - move_myself
        - comment_for_collector
    Org:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - id
        - name
    Bill:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - id
        - name
    OrgsBills:
      type: object
      properties:
        orgs:
          type: array
          items:
            $ref: '#/components/schemas/Org'
        bills:
          type: array
          items:
            $ref: '#/components/schemas/Bill'
      required:
        - orgs
        - bills
    ReqRefusalDto:
      type: object
      properties:
        id:
          type: string
        reason:
          type: string
      required:
        - id
        - reason
    Tks:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - id
        - name
    Countries:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - id
        - name
    Regions:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - id
        - name
    Cities:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - id
        - name
    TkCities:
      type: object
      properties:
        tks:
          type: array
          items:
            $ref: '#/components/schemas/Tks'
        countries:
          type: array
          items:
            $ref: '#/components/schemas/Countries'
        regions:
          type: array
          items:
            $ref: '#/components/schemas/Regions'
        cities:
          type: array
          items:
            $ref: '#/components/schemas/Cities'
      required:
        - tks
        - countries
        - regions
        - cities
    DeliveryInfoAppSale:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
        client:
          type: string
        status:
          type: string
        statushistory:
          type: string
        sending_city:
          type: string
        receipt_country:
          type: string
        receipt_region:
          type: string
        receipt_city:
          type: string
        delivery_status:
          type: string
        driver:
          type: string
        inn:
          type: string
        passport:
          type: string
        registration:
          type: string
        delivery_client:
          type: string
        name_or_name:
          type: string
        private:
          type: string
        weight:
          type: string
        sum:
          type: string
        tk:
          type: string
      required:
        - id
        - date
        - client
        - status
        - statushistory
        - sending_city
        - receipt_country
        - receipt_region
        - receipt_city
        - delivery_status
        - driver
        - inn
        - passport
        - registration
        - delivery_client
        - name_or_name
        - private
        - weight
        - sum
        - tk
    DeliveryInfoRes:
      type: object
      properties:
        tkCities:
          $ref: '#/components/schemas/TkCities'
        deliveryInfo:
          $ref: '#/components/schemas/DeliveryInfoAppSale'
      required:
        - tkCities
        - deliveryInfo
    InvoiceInfo:
      type: object
      properties:
        num:
          type: string
        date:
          type: string
        innorganization:
          type: string
        kpporganization:
          type: string
        bank:
          type: string
        bikbank:
          type: string
        schetbank:
          type: string
        schetorganization:
          type: string
        organization:
          type: string
        provider:
          type: string
        buyer:
          type: string
        director:
          type: string
        buh:
          type: string
        sum:
          type: string
        withnds:
          type: string
        allsum:
          type: string
      required:
        - num
        - date
        - innorganization
        - kpporganization
        - bank
        - bikbank
        - schetbank
        - schetorganization
        - organization
        - provider
        - buyer
        - director
        - buh
        - sum
        - withnds
        - allsum
    InvoiceItem:
      type: object
      properties:
        name:
          type: string
        position:
          type: string
        cost:
          type: string
        count:
          type: string
        sum:
          type: string
      required:
        - name
        - position
        - cost
        - count
        - sum
    ResCheck:
      type: object
      properties:
        info:
          $ref: '#/components/schemas/InvoiceInfo'
        data:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceItem'
      required:
        - info
        - data
    ReqCreateCheck:
      type: object
      properties:
        id:
          type: string
        org:
          type: string
        bill:
          type: string
      required:
        - id
        - org
        - bill
    ProductInfo:
      type: object
      properties:
        pages:
          type: number
        count:
          type: number
      required:
        - pages
        - count
    ProductDto:
      type: object
      properties:
        indcode:
          type: string
        name:
          type: string
        cost:
          type: string
        comment:
          type: string
        article:
          type: string
        photos:
          type: array
          items:
            type: string
        sklad:
          type: string
        poddon:
          type: string
        pk:
          type: boolean
        place:
          type: string
      required:
        - indcode
        - name
        - cost
        - comment
        - article
        - photos
        - sklad
        - poddon
        - pk
        - place
    ProductsResponse:
      type: object
      properties:
        info:
          $ref: '#/components/schemas/ProductInfo'
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProductDto'
      required:
        - info
        - data
    ProductsTypesResponse:
      type: object
      properties:
        id:
          type: number
        count:
          type: number
        title:
          type: string
      required:
        - id
        - count
        - title
    IssueProductInSaleReq:
      type: object
      properties:
        id:
          type: string
        pose:
          type: number
      required:
        - id
        - pose
    ChangeProductInAppSale:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        indCode:
          type: string
        pose:
          type: number
      required:
        - id
        - type
        - indCode
        - pose
    ReqMoveProduct:
      type: object
      properties:
        id:
          type: string
        type:
          type: number
        place:
          type: string
      required:
        - id
        - type
        - place
    ReqMovePallete:
      type: object
      properties:
        pallet:
          type: string
        place:
          type: string
      required:
        - pallet
        - place
    ReqEditProduct:
      type: object
      properties:
        id:
          type: string
        comment:
          type: string
        cost:
          type: number
      required:
        - id
        - comment
        - cost
    ReqSendToLost:
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
      required:
        - ids
    ReqAddToZakazNaryad:
      type: object
      properties:
        orderId:
          type: string
        productId:
          type: string
      required:
        - orderId
        - productId
    Application:
      type: object
      properties:
        id:
          type: string
        date:
          type: number
      required:
        - id
        - date
    ApplicationInfo:
      type: object
      properties:
        id:
          type: string
        date:
          type: number
        client:
          type: number
        application:
          $ref: '#/components/schemas/Application'
        processing:
          type: string
        status:
          type: string
        store_keeper:
          type: string
        responsible:
          type: string
        sum:
          type: string
        sub_processing:
          type: string
        porter:
          type: string
        numCheck:
          type: string
      required:
        - id
        - date
        - client
        - application
        - processing
        - status
        - store_keeper
        - responsible
        - sum
        - sub_processing
        - porter
        - numCheck
    ApplicationDto:
      type: object
      properties:
        name:
          type: string
        position:
          type: string
        cost:
          type: string
        count:
          type: string
        sum:
          type: string
        issued:
          type: string
        code:
          type: string
        id:
          type: string
        place:
          type: string
        photos:
          type: array
          items:
            type: string
        state:
          type: string
        article:
          type: string
        availability_in_k_warehouse:
          type: number
      required:
        - name
        - position
        - cost
        - count
        - sum
        - issued
        - code
        - id
        - place
        - photos
        - state
        - article
        - availability_in_k_warehouse
    ApplicationResponseDto:
      type: object
      properties:
        info:
          $ref: '#/components/schemas/ApplicationInfo'
        data:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationDto'
      required:
        - info
        - data
    SaleInfo:
      type: object
      properties:
        id:
          type: string
        date:
          type: number
        client:
          type: number
        application:
          $ref: '#/components/schemas/Application'
        processing:
          type: string
        status:
          type: string
        store_keeper:
          type: string
        responsible:
          type: string
        sum:
          type: string
        sub_processing:
          type: string
        recorded_track_number:
          type: boolean
      required:
        - id
        - date
        - client
        - application
        - processing
        - status
        - store_keeper
        - responsible
        - sum
        - sub_processing
        - recorded_track_number
    SaleDto:
      type: object
      properties:
        name:
          type: string
        position:
          type: number
        cost:
          type: string
        count:
          type: string
        sum:
          type: string
        issued:
          type: string
        code:
          type: string
        id:
          type: string
        place:
          type: string
        photos:
          type: array
          items:
            type: string
        state:
          type: string
        article:
          type: string
        availability_in_k_warehouse:
          type: number
      required:
        - name
        - position
        - cost
        - count
        - sum
        - issued
        - code
        - id
        - place
        - photos
        - state
        - article
        - availability_in_k_warehouse
    SaleResponseDto:
      type: object
      properties:
        info:
          $ref: '#/components/schemas/SaleInfo'
        data:
          type: array
          items:
            $ref: '#/components/schemas/SaleDto'
      required:
        - info
        - data
    SaleAddTrackNumberReq:
      type: object
      properties:
        saleId:
          type: string
        trackNumber:
          type: string
      required:
        - saleId
        - trackNumber
    CreateSaleDto:
      type: object
      properties:
        id:
          type: string
        org:
          type: string
        bill:
          type: string
        date:
          type: string
      required:
        - id
        - org
        - bill
        - date
    Photographer:
      type: object
      properties:
        tabnum:
          type: string
        name:
          type: string
        count:
          type: number
      required:
        - tabnum
        - name
        - count
    Day:
      type: object
      properties:
        date:
          type: string
        photographers:
          type: array
          items:
            $ref: '#/components/schemas/Photographer'
      required:
        - date
        - photographers
    ResStatisticsOfPhotos:
      type: object
      properties:
        stat:
          type: array
          items:
            $ref: '#/components/schemas/Day'
      required:
        - stat
    ResCountriesDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - id
        - name
    ResTransportCompanyDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - id
        - name
    CartInfo:
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
        pages:
          type: number
        count:
          type: number
      required:
        - ids
        - pages
        - count
    CartData:
      type: object
      properties:
        name:
          type: string
        article:
          type: string
        cost:
          type: string
        comment:
          type: string
        place:
          type: string
        sklad:
          type: string
        pk:
          type: string
        indcode:
          type: string
        poddon:
          type: string
        photos:
          type: array
          items:
            type: string
      required:
        - name
        - article
        - cost
        - comment
        - place
        - sklad
        - pk
        - indcode
        - poddon
        - photos
    ResCartDto:
      type: object
      properties:
        info:
          $ref: '#/components/schemas/CartInfo'
        data:
          type: array
          items:
            $ref: '#/components/schemas/CartData'
      required:
        - info
        - data
    PoddonInfo:
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
        pages:
          type: number
        count:
          type: number
      required:
        - ids
        - pages
        - count
    PoddonData:
      type: object
      properties:
        name:
          type: string
        article:
          type: string
        cost:
          type: string
        comment:
          type: string
        place:
          type: string
        sklad:
          type: string
        pk:
          type: string
        indcode:
          type: string
        poddon:
          type: string
        photos:
          type: array
          items:
            type: string
      required:
        - name
        - article
        - cost
        - comment
        - place
        - sklad
        - pk
        - indcode
        - poddon
        - photos
    ResPoddonDto:
      type: object
      properties:
        info:
          $ref: '#/components/schemas/PoddonInfo'
        data:
          type: array
          items:
            $ref: '#/components/schemas/PoddonData'
      required:
        - info
        - data
